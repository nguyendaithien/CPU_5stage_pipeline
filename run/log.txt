xrun: 23.09-s001: (c) Copyright 1995-2023 Cadence Design Systems, Inc.
TOOL:	xrun	23.09-s001: Started on Oct 10, 2024 at 20:32:27 +07
xrun
	-sv
	-f list_file.f
		/home/usr3/project/CPU_5stage_pipeline/tb/testbench.sv
		/home/usr3/project/CPU_5stage_pipeline/tb/pkg_1.sv
		/home/usr3/project/CPU_5stage_pipeline/tb/DMEM.sv
		/home/usr3/project/CPU_5stage_pipeline/rtl/decoder.sv
		/home/usr3/project/CPU_5stage_pipeline/rtl/CPU_EDABK_TOP.sv
		/home/usr3/project/CPU_5stage_pipeline/rtl/register_file.sv
		/home/usr3/project/CPU_5stage_pipeline/rtl/ALU.sv
		/home/usr3/project/CPU_5stage_pipeline/rtl/IF_stage.sv
		/home/usr3/project/CPU_5stage_pipeline/rtl/ID_stage.sv
		/home/usr3/project/CPU_5stage_pipeline/rtl/EX_stage.sv
		/home/usr3/project/CPU_5stage_pipeline/rtl/MEM_stage.sv
		/home/usr3/project/CPU_5stage_pipeline/rtl/WB_stage.sv
		/home/usr3/project/CPU_5stage_pipeline/rtl/control_hazard.sv
		/home/usr3/project/CPU_5stage_pipeline/rtl/defi.vh
		/home/usr3/project/CPU_5stage_pipeline/rtl/pkg.sv
		/home/usr3/project/CPU_5stage_pipeline/rtl/csr_register.sv
		/home/usr3/project/CPU_5stage_pipeline/rtl/controller.sv
		/home/usr3/project/CPU_5stage_pipeline/rtl/SLEEP_UNIT.sv
		/home/usr3/project/CPU_5stage_pipeline/rtl/COMPRESSED_DECODER.sv
		/home/usr3/project/CPU_5stage_pipeline/rtl/csr.sv
		/home/usr3/project/CPU_5stage_pipeline/tb/test_case.sv
		/home/usr3/project/CPU_5stage_pipeline/tb/check_FSM.sv
		/home/usr3/project/CPU_5stage_pipeline/tb/check_hazard.sv
		/home/usr3/project/CPU_5stage_pipeline/tb/top_intf.sv
	-access +rwc
	-coverage all
	-covoverwrite
	-covworkdir ./cor_work
	-covfile ./coverage.ccf
	-log log.txt
Loading snapshot worklib.testbench:sv .................... Done
xcelium> source /home/edabk/Cadence/XCELIUM2309/tools/xcelium/files/xmsimrc
xcelium> run
[INSTR] check slt pass
[INSTR] check slt pass
[INSTR] check or pass
[INSTR] check or pass
[INSTR] check srl pass
[HAZARD] pass HAZARD 3
[HAZARD] pass HAZARD 4
[INSTR] check and pass
[INSTR] check and pass
[INSTR] check sra pass
add to mem 00000090
data to mem 0000000e
add to mem 000000cc
data to mem 00000004
add to mem 000000c4
data to mem 00000004
[INSTR] check srl pass
add to mem 00000084
data to mem 00000004
[INSTR] check slt pass
[INSTR] check and pass
[INSTR] check and pass
[INSTR] check add pass
add to mem 00000084
data to mem 00000004
add to mem 00000088
data to mem 00040000
[INSTR] check and pass
[HAZARD] pass HAZARD 3
[HAZARD] pass HAZARD 4
add to mem 00000044
data to mem 00000000
[INSTR] check xor pass
add to mem 000001d8
data to mem 00040000
    (is_lw_instr) |-> ##2 (no_hazard) &((alu_result == (op_a_alu + op_b_alu)) & ( op_a_alu == ID_rs1_data ) & (op_b_alu == ID_imm )) |-> ##1 ( ( MEM_WR == 1'b0 ) & (MEM_RD == 1'b1)) |=> ((WB_regwrite == 1'b1) & (data_write_reg == WB_data_write) & (WB_data_write == WB_dmem_data )) ; 
                                                                                                                                                                                                                                                     |
xmsim: *E,ASRTST (../tb/test_case.sv,399): (time 1130 NS) Assertion testbench.top.check.lw_instr has failed (5 cycles, starting 1090 NS)
check lw instr fail
add to mem 00000090
data to mem 00000004
[INSTR] check or pass
add to mem 00000000
data to mem 00000000
[INSTR] check and pass
[INSTR] check slt pass
add to mem 00000084
data to mem 00040000
add to mem 00000040
data to mem 00040000
add to mem 01ffff78
data to mem 00fc0000
[INSTR] check sra pass
add to mem 000001bc
data to mem 00040000
[INSTR] check sra pass
[INSTR] check srl pass
[INSTR] check xor pass
add to mem 00000104
data to mem 00000194
add to mem 00000044
data to mem 00000004
[INSTR] check xor pass
add to mem 00000040
data to mem 00420000
[INSTR] check add pass
[INSTR] check and pass
add to mem 0000030c
data to mem 00000000
[INSTR] check add pass
add to mem 01ffff3c
data to mem 02e40000
add to mem 000000c4
data to mem 00000004
[INSTR] check or pass
add to mem 00000040
data to mem 00000000
[INSTR] check and pass
[INSTR] check or pass
[INSTR] check or pass
add to mem 000000cc
data to mem 04000000
[INSTR] check and pass
add to mem 000000c8
data to mem 00000004
add to mem 00000044
data to mem 00000000
[INSTR] check and pass
add to mem 00000040
data to mem 00000001
add to mem 00000050
data to mem 00000000
add to mem 000000c4
data to mem 0000036c
add to mem 00000044
data to mem 00000000
[INSTR] check and pass
[INSTR] check xor pass
add to mem 00000040
data to mem 00040000
add to mem 00004044
data to mem 00080000
add to mem 0000004c
data to mem 00080000
[INSTR] check xor pass
add to mem 00000080
data to mem 000a0000
add to mem 00000398
data to mem 00080000
[INSTR] check or pass
add to mem 00000054
data to mem 00000003
add to mem 000000c4
data to mem 0000036c
add to mem 00000044
data to mem 00040000
[HAZARD] pass HAZARD 3
[HAZARD] pass HAZARD 4
[INSTR] check slt pass
add to mem 000000c4
data to mem 00000004
add to mem 00000094
data to mem 00000000
add to mem 00000144
data to mem 00000010
[INSTR] check or pass
add to mem 00004844
data to mem 00000004
[INSTR] check add pass
add to mem 00000104
data to mem 000e0000
add to mem 00000144
data to mem 00040000
add to mem 000000d4
data to mem 00000000
add to mem 0000008c
data to mem 00000004
add to mem 000000c0
data to mem xxxxxxxx
add to mem 00000494
data to mem 00000004
add to mem 000004d0
data to mem 00004000
add to mem 00000050
data to mem 00000000
add to mem 000000c0
data to mem 000c0000
[INSTR] check srl pass
add to mem 000000c0
data to mem 00000000
add to mem 000000c8
data to mem 00000004
[INSTR] check add pass
[INSTR] check add pass
add to mem 000006e8
data to mem 067c0000
add to mem 00000044
data to mem 00000000
[INSTR] check slt pass
[INSTR] check and pass
add to mem 00000088
data to mem 00000004
[INSTR] check xor pass
add to mem 000006c0
data to mem 00040000
[INSTR] check srl pass
 ENDDDDD at 5020 
add to mem 00004084
data to mem 06f40000
[INSTR] check xor pass
Simulation complete via $finish(1) at time 10 US + 0
../tb/testbench.sv:379    #10000  $finish;
xcelium> exit

coverage setup:
  workdir  :  ./cor_work
  dutinst  :  testbench(testbench)
  scope    :  scope
  testname :  test

coverage files:
  model(design data) :  ./cor_work/scope/icc_3a863dda_086858cb.ucm (reused)
  data               :  ./cor_work/scope/test/icc_3a863dda_086858cb.ucd
TOOL:	xrun	23.09-s001: Exiting on Oct 10, 2024 at 20:32:29 +07  (total: 00:00:02)
